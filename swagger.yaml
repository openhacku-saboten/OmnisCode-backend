swagger: "2.0"
info:
  description: "コード共有SNS OmnisCode のAPI"
  version: "1.0.0"
  title: "OmnisCode API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api/v1"
tags:
- name: "post"
  description: "スレッドのメインとなる投稿"
- name: "comment"
  description: "スレッドにつくコメント"
- name: "user"
  description: "ユーザー"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "事前にloginが必要"
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        "204":
          description: "successful operation"
      security:
      - Bearer: []
    put:
      tags:
      - "user"
      summary: "Update user"
      description: "事前にloginが必要"
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        "200":
          description: "successful operation"
      security:
      - Bearer: []
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "事前にloginが必要"
      operationId: "deleteUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
      security:
      - Bearer: []
  /user/{userID}:
    get:
      tags:
      - "user"
      summary: "Get user by user id"
      description: "User情報を取得"
      operationId: "getUserById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserResponse"
        "404":
          description: "User not found"
          schema:
            $ref: "#/definitions/errorResponse"
  /user/{userID}/post:
    get:
      tags:
      - "user"
      summary: "Get posts by user id"
      description: "Userが投稿したPost一覧を取得"
      operationId: "getPostsByuserID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/PostResponse"
        "404":
          description: "User not found"
          schema:
            $ref: "#/definitions/errorResponse"
  /user/{userID}/comment:
    get:
      tags:
      - "user"
      summary: "Get comments by user id"
      description: "Userが投稿したComment一覧を取得"
      operationId: "getCommentsByuserID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CommentResponse"
        "404":
          description: "User not found"
          schema:
            $ref: "#/definitions/errorResponse"
  /post:
    post:
      tags:
      - "post"
      summary: "Create post"
      description: "事前にloginが必要"
      operationId: "addPost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PostRequest"
      responses:
        "204":
          description: "successful operation"
      security:
      - Bearer: []
  /post/{postID}:
    get:
      tags:
      - "post"
      summary: "Find post by post id"
      operationId: "getPostById"
      produces:
      - "application/json"
      parameters:
      - name: "postID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PostResponse"
        "404":
          description: "Post not found"
          schema:
            $ref: "#/definitions/errorResponse"
    put:
      tags:
      - "post"
      summary: "Update post"
      description: "事前にloginが必要"
      operationId: "updatePost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "postID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PostRequest"
      responses:
        "200":
          description: "successful operation"
      security:
      - Bearer: []
    delete:
      tags:
      - "post"
      summary: "Delete post"
      description: "事前にloginが必要"
      operationId: "deletePost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "postID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
      security:
      - Bearer: []
  /post/{postID}/comment:
    get:
      tags:
      - "comment"
      summary: "Get comments by post id"
      operationId: "getCommentsBypostID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "postID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CommentResponse"
    post:
      tags:
      - "comment"
      summary: "Create comment"
      description: "事前にloginが必要"
      operationId: "addComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "postID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CommentRequest"
      responses:
        "200":
          description: "successful operation"
      security:
      - Bearer: []
  /post/{postID}/comment/{commentID}:
    delete:
      tags:
      - "comment"
      summary: "Delete comment"
      description: "事前にloginが必要"
      operationId: "deleteComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "postID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "commentID"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "Comment not found"
          schema:
            $ref: "#/definitions/errorResponse"
      security:
      - Bearer: []
  
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    description: "'Authorization: Bearer $TOKEN'の形式でheaderにTokenを付与"

definitions:
  UserRequest:
    type: "object"
    properties:
      name:
        type: "string"
      twitter_id:
        type: "string"
      profile:
        type: "string"
  UserResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      twitter_id:
        type: "string"
      profile:
        type: "string"
  PostRequest:
    type: "object"
    properties:
      title:
        type: "string"
      post:
        type: "string"
      language:
        type: "string"
      description:
        type: "string"
      source:
        type: "string"
        description: "postの引用元(urlなど)"
  PostResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      post:
        type: "string"
      language:
        type: "string"
      description:
        type: "string"
      source:
        type: "string"
        description: "postの引用元(urlなど)"
  CommentRequest:
    type: "object"
    properties:
      line:
        type: "integer"
        format: "int32"
        description: "レビュー時に指定した行数"
      description:
        type: "string"  
  CommentResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      post_id:
        type: "integer"
        format: "int64"
      line:
        type: "integer"
        format: "int32"
        description: "レビュー時に指定した行数"
      description:
        type: "string"
  errorResponse:
    type: "object"
    properties:
      post:
        type: "integer"
        format: "int32"
      message:
        type: "string"
